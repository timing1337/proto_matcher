syntax = "proto2";



import "define.proto";
import "cmd_social.proto";

message KeepAliveNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 72;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GmTalkReq {
    optional string msg = 13;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 98;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GmTalkRsp {
    optional int32 retcode = 15;
    optional string retmsg = 3;
    optional string msg = 13;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 12;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message MsgParam {
    oneof param {
        uint32 int_param = 9;
        float flt_param = 7;
        string str_param = 4;
    }
}

message ShowMessageNotify {
    optional SvrMsgId msg_id = 14;
    repeated MsgParam params = 13;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 35;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message PingReq {
    optional uint32 client_time = 12;
    optional float ue_time = 14;
    optional double total_tick_time = 6;
    optional bytes sc_data = 10;
    optional uint32 seq = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 7;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message PingRsp {
    optional uint32 client_time = 15;
    optional int32 retcode = 6;
    optional uint32 seq = 13;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 21;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetOnlinePlayerListReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 90;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetOnlinePlayerListRsp {
    optional int32 retcode = 7;
    optional uint32 param = 11;
    repeated OnlinePlayerInfo player_info_list = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 73;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ServerTimeNotify {
    optional uint64 server_time = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 99;
        ENET_CHANNEL_ID = 1;
        ENET_IS_RELIABLE = 1;
    }
}

message ServerLogNotify {
    optional string server_log = 7;
    optional ServerLogType log_type = 9;
    optional ServerLogLevel log_level = 15;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 31;
        ENET_CHANNEL_ID = 1;
        ENET_IS_RELIABLE = 1;
    }
}

message ClientReconnectNotify {
    optional ClientReconnectReason reason = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 75;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message RobotPushPlayerDataNotify {
    optional bytes bin = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 97;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ClientReportNotify {
    optional string report_type = 1;
    optional string report_value = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 81;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message UnionCmd {
    optional bytes body = 14;
    optional uint32 message_id = 8;
}

message UnionCmdNotify {
    repeated UnionCmd cmd_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetOnlinePlayerInfoReq {
    optional bool is_online_id = 15;
    
    oneof player_id {
        uint32 target_uid = 9;
        string online_id = 7;
        string psn_id = 2;
    }
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 82;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetOnlinePlayerInfoRsp {
    optional int32 retcode = 11;
    optional uint32 target_uid = 7;
    optional uint32 param = 4;
    optional OnlinePlayerInfo target_player_info = 14;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 47;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message SegmentInfo {
    optional uint32 offset = 3;
    optional uint32 module = 7;
    optional uint32 size = 8;
}

message SegmentCRCInfo {
    optional uint32 module = 13;
    optional int32 retcode = 5;
    optional uint32 size = 10;
    optional string crc = 3;
    optional uint32 offset = 11;
}

message CheckSegmentCRCNotify {
    repeated SegmentInfo info_list = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 39;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message CheckSegmentCRCReq {
    repeated SegmentCRCInfo info_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 53;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message PlayerRTTInfo {
    optional uint32 rtt = 2;
    optional uint32 uid = 1;
}

message WorldPlayerRTTNotify {
    repeated PlayerRTTInfo player_rtt_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 22;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message EchoNotify {
    optional uint32 seq_id = 4;
    optional string content = 9;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 65;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message UpdateRedPointNotify {
    repeated RedPointData red_point_list = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 93;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ClientBulletCreateNotify {
    optional uint32 param = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ChangeServerGlobalValueNotify {
    optional uint32 entity_id = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 27;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GmTalkNotify {
    optional string msg = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 94;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message LastPacketPrintNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 88;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

enum SvrMsgId {
    MSG_UNKNOWN = 0;
    MSG_BLOCK_REFRESH_COUNTDOWN = 1;
    MSG_AVATAR_REVIVE_BY_STATUE = 2;
    MSG_DAILY_TASK_REWARD_MAX_NUM = 3;
    MSG_ROUTINE_TYPE_NOT_OPEN = 4;
    MSG_ROUTINE_TYPE_REWARD_MAX_NUM = 5;
    MSG_MECHANICUS_COIN_LIMIT = 6;
}

enum ServerLogType {
    SERVER_LOG_NONE = 0;
    SERVER_LOG_ABILITY = 1;
    SERVER_LOG_LEVEL = 2;
    SERVER_LOG_ENTITY = 3;
    SERVER_LOG_LUA = 4;
}

enum ServerLogLevel {
    LOG_LEVEL_NONE = 0;
    LOG_LEVEL_DEBUG = 1;
    LOG_LEVEL_INFO = 2;
    LOG_LEVEL_WARNING = 3;
    LOG_LEVEL_ERROR = 4;
}

enum ClientReconnectReason {
    CLIENT_RECONNNECT_NONE = 0;
    CLIENT_RECONNNECT_QUIT_MP = 1;
}
