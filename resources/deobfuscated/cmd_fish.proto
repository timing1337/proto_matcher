syntax = "proto2";



import "define.proto";

message EnterFishingReq {
    optional uint32 fish_pool_id = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5826;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message EnterFishingRsp {
    optional int32 retcode = 7;
    optional uint32 fish_pool_id = 9;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5818;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message StartFishingReq {
    optional uint32 rod_entity_id = 5;
    optional uint32 fish_pool_id = 15;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5825;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message StartFishingRsp {
    optional int32 retcode = 1;
    optional uint32 fish_pool_id = 14;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5807;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FishCastRodReq {
    optional uint32 bait_id = 14;
    optional uint32 rod_id = 4;
    optional uint32 rod_entity_id = 7;
    optional Vector pos = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5802;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message FishCastRodRsp {
    optional int32 retcode = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5831;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FishChosenNotify {
    optional uint32 fish_id = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5829;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FishEscapeNotify {
    optional FishEscapeReason reason = 4;
    optional Vector pos = 7;
    optional uint32 uid = 14;
    repeated uint32 fish_id_list = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5822;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FishBiteReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5844;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message FishBiteRsp {
    optional int32 retcode = 9;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5849;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FishBattleBeginReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5820;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message FishBattleBeginRsp {
    optional int32 retcode = 10;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5845;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FishBattleEndReq {
    optional uint32 max_bonus_time = 3;
    optional FishBattleResult battle_result = 10;
    optional bool is_always_bonus = 11;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5841;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message FishBattleEndRsp {
    optional bool is_got_reward = 10;
    repeated ItemParam reward_item_list = 11;
    repeated ItemParam talent_item_list = 13;
    repeated ItemParam drop_item_list = 9;
    optional int32 retcode = 7;
    
    optional FishNoRewardReason no_reward_reason = 14;
    enum FishNoRewardReason {
        FISH_NO_REWARD_NONE = 0;
        FISH_NO_REWARD_ACTIVITY_LIMIT = 1;
        FISH_NO_REWARD_BAG_LIMIT = 2;
        FISH_NO_REWARD_POOL_LIMIT = 3;
    }
    
    optional FishBattleResult battle_result = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5842;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ExitFishingReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5814;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ExitFishingRsp {
    optional int32 retcode = 9;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5847;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FishAttractNotify {
    repeated uint32 fish_id_list = 3;
    optional Vector pos = 9;
    optional uint32 uid = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5837;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FishBaitGoneNotify {
    optional uint32 uid = 8;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5823;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message PlayerFishingDataNotify {
    optional uint32 last_fish_rod_id = 8;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5835;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FishPoolDataNotify {
    optional uint32 entity_id = 6;
    optional uint32 today_fish_num = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5848;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

enum FishEscapeReason {
    FISN_ESCAPE_NONE = 0;
    FISH_ESCAPE_SHOCKED = 1;
    FISH_ESCAPE_UNHOOK = 2;
}

enum FishBattleResult {
    FISH_BATTLE_RESULT_NONE = 0;
    FISH_BATTLE_RESULT_SUCC = 1;
    FISH_BATTLE_RESULT_FAIL = 2;
    FISH_BATTLE_RESULT_TIMEOUT = 3;
    FISH_BATTLE_RESULT_CANCEL = 4;
    FISH_BATTLE_RESULT_EXIT = 5;
}
